if(WITH_FONTCONFIG)
    find_package(Fontconfig REQUIRED)
    target_include_directories(Aegisub PRIVATE ${Fontconfig_INCLUDE_DIRS})
    target_link_libraries(Aegisub ${Fontconfig_LIBRARIES})
    target_sources(Aegisub PRIVATE src/font_file_lister_fontconfig.cpp)
endif()

find_package(ass REQUIRED)
target_include_directories(Aegisub PRIVATE ${ass_INCLUDE_DIRS})
target_link_libraries(Aegisub ${ass_LIBRARIES})

find_package(Boost REQUIRED chrono filesystem locale regex system thread)
target_include_directories(libaegisub PRIVATE ${Boost_INCLUDE_DIRS})
target_include_directories(Aegisub PRIVATE ${Boost_INCLUDE_DIRS})
target_link_directories(Aegisub PRIVATE ${Boost_LIBRARY_DIRS})
target_link_libraries(Aegisub ${Boost_LIBRARIES})

find_package(OpenGL REQUIRED)
target_include_directories(Aegisub PRIVATE ${OPENGL_INCLUDE_DIR})
target_link_libraries(Aegisub ${OPENGL_LIBRARIES})

find_package(Iconv REQUIRED)
target_include_directories(libaegisub PRIVATE ${Iconv_INCLUDE_DIRS})
target_link_libraries(libaegisub ${Iconv_LIBRARIES})
if(NOT Iconv_IS_BUILT_IN)
    target_compile_definitions(libaegisub PRIVATE "AGI_ICONV_CONST")
endif()

find_package(ICU REQUIRED uc dt in)
target_include_directories(libaegisub PRIVATE ${ICU_INCLUDE_DIRS})
target_include_directories(Aegisub PRIVATE ${ICU_INCLUDE_DIRS})
target_link_libraries(Aegisub ${ICU_LIBRARIES})

find_package(wxWidgets REQUIRED adv base core gl stc xml)
include(${wxWidgets_USE_FILE})
target_link_libraries(Aegisub ${wxWidgets_LIBRARIES})

find_package(ZLIB REQUIRED)
target_include_directories(Aegisub PRIVATE ${ZLIB_INCLUDE_DIRS})
target_link_libraries(Aegisub ${ZLIB_LIBRARIES})

if(WITH_ALSA)
    find_package(ALSA)
    if(NOT ALSA_FOUND)
        set(WITH_ALSA OFF CACHE BOOL "Enable ALSA support" FORCE)
    endif()
endif()
if(WITH_ALSA)
    target_compile_definitions(Aegisub PRIVATE "WITH_ALSA")
    target_include_directories(Aegisub PRIVATE ${ALSA_INCLUDE_DIRS})
    target_link_libraries(Aegisub ${ALSA_LIBRARIES})
endif()

if(WITH_AVISYNTH)
    find_package(AviSynth)
    if(NOT AviSynth_FOUND)
        set(WITH_AVISYNTH OFF CACHE BOOL "Enable AviSynth support" FORCE)
    endif()
endif()
if(WITH_AVISYNTH)
    target_compile_definitions(Aegisub PRIVATE "WITH_AVISYNTH" "AVS_LINKAGE_DLLIMPORT")
    target_include_directories(Aegisub PRIVATE ${AviSynth_INCLUDE_DIRS})
    target_link_libraries(Aegisub Vfw32 ${AviSynth_LIBRARIES})
endif()

if(WITH_FFMS2)
    find_package(FFMS2)
    if(NOT FFMS2_FOUND)
        set(WITH_FFMS2 OFF CACHE BOOL "Enable FFMS2 support" FORCE)
    endif()
endif()
if(WITH_FFMS2)
    target_include_directories(Aegisub PRIVATE ${FFMS2_INCLUDE_DIRS})
    target_link_libraries(Aegisub ${FFMS2_LIBRARIES})
endif()

if(WITH_FFTW3)
    find_package(FFTW)
    if(NOT FFTW_FOUND)
        set(WITH_FFTW3 OFF CACHE BOOL "Enable fftw support" FORCE)
    endif()
endif()
if(WITH_FFTW3)
    target_include_directories(Aegisub PRIVATE ${FFTW_INCLUDES})
    target_link_libraries(Aegisub ${FFTW_LIBRARIES})
endif()

if(WITH_HUNSPELL)
    find_package(Hunspell)
    if(NOT HUNSPELL_FOUND)
        set(WITH_HUNSPELL OFF CACHE BOOL "Enable Hunspell support" FORCE)
    endif()
endif()
if(WITH_HUNSPELL)
    target_include_directories(Aegisub PRIVATE ${HUNSPELL_INCLUDE_DIR})
    target_link_libraries(Aegisub ${HUNSPELL_LIBRARIES})
    if(HUNSPELL_HAS_STRING_API)
        target_compile_definitions(Aegisub PRIVATE "HUNSPELL_HAS_STRING_API")
    endif(HUNSPELL_HAS_STRING_API)
endif()

if(WITH_LIBPULSE)
    find_package(PulseAudio)
    if(NOT PULSEAUDIO_FOUND)
        set(WITH_LIBPULSE OFF CACHE BOOL "Enable PulseAudio support" FORCE)
    endif()
endif()
if(WITH_LIBPULSE)
    target_include_directories(Aegisub PRIVATE ${PULSEAUDIO_INCLUDE_DIR})
    target_link_libraries(Aegisub ${PULSEAUDIO_LIBRARY})
endif()

if(WITH_OPENAL)
    find_package(OpenAL)
    if(NOT OPENAL_FOUND)
        set(WITH_OPENAL OFF CACHE BOOL "Enable OpenAL support" FORCE)
    endif()
endif()
if(WITH_OPENAL)
    target_include_directories(Aegisub PRIVATE ${OPENAL_INCLUDE_DIR})
    target_link_libraries(Aegisub ${OPENAL_LIBRARY})
endif()

if(WITH_OSS)
    find_package(OSS)
    if(NOT OSS_FOUND)
        set(WITH_OSS OFF CACHE BOOL "Enable OSS support" FORCE)
    endif()
endif()
if(WITH_OSS)
    target_include_directories(Aegisub PRIVATE ${OSS_INCLUDE_DIRS})
endif()

if(WITH_PORTAUDIO)
    find_package(PortAudio)
    if(NOT PortAudio_FOUND)
        set(WITH_PORTAUDIO OFF CACHE BOOL "Enable PortAudio support" FORCE)
    endif()
endif()
if(WITH_PORTAUDIO)
    target_include_directories(Aegisub PRIVATE ${PortAudio_INCLUDE_DIRS})
    target_link_libraries(Aegisub ${PortAudio_LIBRARIES})
endif()

if(WITH_UCHARDET)
    find_package(uchardet)
    if(NOT uchardet_FOUND)
        set(WITH_UCHARDET OFF CACHE BOOL "Enable uchardet support" FORCE)
    endif()
endif()
if(WITH_UCHARDET)
    target_include_directories(Aegisub PRIVATE ${uchardet_INCLUDE_DIRS})
    target_link_libraries(Aegisub ${uchardet_LIBRARIES})
endif()
